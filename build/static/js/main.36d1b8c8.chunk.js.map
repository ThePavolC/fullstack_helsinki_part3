{"version":3,"sources":["components/persons.js","components/filter.js","components/personForm.js","components/notification.js","services/persons.js","app.js","index.js"],"names":["Persons","persons","onDeleteHandler","map","person","key","name","number","onClick","Filter","filterWord","onChangeFilterHandler","htmlFor","id","onChange","value","PersonForm","onSubmitHandler","newName","onChangeNameHandler","newNumber","onChangeNumberHandler","onSubmit","type","NOTIFICATION_STATUS","Notification","notification","message","status","classes","push","className","join","baseUrl","axios","get","then","response","data","newObject","setNotification","post","finally","setTimeout","put","delete","failure","App","useState","setPersons","setNewName","setNewNumber","setNewFilterWord","reloadPersons","personService","initialPersons","useEffect","personsToShow","filter","toLowerCase","includes","personFormProps","event","preventDefault","find","window","confirm","existingPerson","returnPerson","concat","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36d1b8c8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Persons = ({ persons, onDeleteHandler }) => {\n  return (\n    <>\n      {persons.map((person) => (\n        <div key={person.name}>\n          {person.name} {person.number}\n          <button onClick={() => onDeleteHandler(person)}>delete</button>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Filter = ({ filterWord, onChangeFilterHandler }) => {\n  return (\n    <>\n      <label htmlFor=\"filter\">filter shown with: </label>\n      <input id=\"filter\" onChange={onChangeFilterHandler} value={filterWord} />\n    </>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  onSubmitHandler,\n  newName,\n  onChangeNameHandler,\n  newNumber,\n  onChangeNumberHandler,\n}) => {\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div>\n        <label htmlFor=\"name\">name: </label>\n        <input id=\"name\" onChange={onChangeNameHandler} value={newName} />\n      </div>\n      <div>\n        <label htmlFor=\"number\">number: </label>\n        <input id=\"number\" onChange={onChangeNumberHandler} value={newNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst SUCCESS = \"success\";\nconst FAILURE = \"failure\";\n\nexport const NOTIFICATION_STATUS = { SUCCESS, FAILURE };\n\nconst Notification = ({ notification }) => {\n  const { message, status } = notification;\n  if (message === null) {\n    return null;\n  }\n\n  const classes = [\"notification\"];\n\n  switch (status) {\n    case SUCCESS:\n      classes.push(NOTIFICATION_STATUS.SUCCESS);\n      break;\n    case FAILURE:\n      classes.push(NOTIFICATION_STATUS.FAILURE);\n      break;\n    // no default\n  }\n\n  return <div className={classes.join(\" \")}>{message}</div>;\n};\n\nexport default Notification;\n","import axios from \"axios\";\nimport { NOTIFICATION_STATUS } from \"../components/notification\";\n\nconst baseUrl = \"http://localhost:3001/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject, setNotification) => {\n  const request = axios.post(baseUrl, newObject);\n  return request\n    .then((response) => response.data)\n    .then((person) => {\n      setNotification({\n        message: `Added ${person.name}`,\n        status: NOTIFICATION_STATUS.SUCCESS,\n      });\n      return person;\n    })\n    .finally(() => {\n      setTimeout(\n        () =>\n          setNotification({\n            message: null,\n          }),\n        3000\n      );\n    });\n};\n\nconst update = (id, newObject, setNotification) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request\n    .then((response) => response.data)\n    .then((person) => {\n      setNotification({\n        message: `Number of ${person.name} updated`,\n        status: NOTIFICATION_STATUS.SUCCESS,\n      });\n      return person;\n    })\n    .finally(() => {\n      setTimeout(\n        () =>\n          setNotification({\n            message: null,\n          }),\n        3000\n      );\n    });\n};\n\nconst deletePerson = (person, setNotification) => {\n  const request = axios.delete(`${baseUrl}/${person.id}`);\n  return request\n    .then(\n      (response) => {\n        setNotification({\n          message: `Person ${person.name} was deleted`,\n          status: NOTIFICATION_STATUS.SUCCESS,\n        });\n        return response.data;\n      },\n      (failure) => {\n        setNotification({\n          message: `Information of ${person.name} has already been removed from server`,\n          status: NOTIFICATION_STATUS.FAILURE,\n        });\n      }\n    )\n    .finally(() => {\n      setTimeout(\n        () =>\n          setNotification({\n            message: null,\n          }),\n        3000\n      );\n    });\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n  deletePerson,\n};\n","import React, { useEffect, useState } from \"react\";\nimport Persons from \"./components/persons\";\nimport Filter from \"./components/filter\";\nimport PersonForm from \"./components/personForm\";\nimport personService from \"./services/persons\";\nimport Notification from \"./components/notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterWord, setNewFilterWord] = useState(\"\");\n  const [notification, setNotification] = useState({ message: null });\n\n  const reloadPersons = () =>\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n\n  useEffect(() => {\n    reloadPersons();\n  }, []);\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n\n    const isNewPersonInPersons = persons.find(\n      (person) => person.name === newName\n    );\n    if (isNewPersonInPersons) {\n      if (\n        window.confirm(\n          `${newName} is already added to the phonebook, replace the old number with a new one ?`\n        )\n      ) {\n        const existingPerson = persons.find(\n          (person) => person.name === newName\n        );\n        personService\n          .update(\n            existingPerson.id,\n            { ...existingPerson, number: newNumber },\n            setNotification\n          )\n          .then(() => reloadPersons())\n          .then(() => {\n            setNewName(\"\");\n            setNewNumber(\"\");\n          });\n        return;\n      } else {\n        return;\n      }\n    }\n\n    const newPerson = { name: newName, number: newNumber };\n    personService.create(newPerson, setNotification).then((returnPerson) => {\n      setPersons(persons.concat(returnPerson));\n      setNewName(\"\");\n      setNewNumber(\"\");\n    });\n  };\n\n  const onChangeNameHandler = (event) => {\n    setNewName(event.target.value);\n  };\n  const onChangeNumberHandler = (event) => {\n    setNewNumber(event.target.value);\n  };\n  const onChangeFilterHandler = (event) => {\n    setNewFilterWord(event.target.value);\n  };\n  const onDeleteHandler = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .deletePerson(person, setNotification)\n        .then(() => reloadPersons());\n    }\n  };\n\n  const personsToShow = persons.filter((person) => {\n    if (filterWord) {\n      return person.name.toLowerCase().includes(filterWord.toLowerCase());\n    }\n    return true;\n  });\n\n  const personFormProps = {\n    onSubmitHandler,\n    newName,\n    onChangeNameHandler,\n    newNumber,\n    onChangeNumberHandler,\n  };\n\n  return (\n    <>\n      <h2>Phonebook</h2>\n\n      <Notification notification={notification} />\n\n      <Filter\n        filterWord={filterWord}\n        onChangeFilterHandler={onChangeFilterHandler}\n      />\n\n      <h2>Add a new</h2>\n      <PersonForm {...personFormProps} />\n\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} onDeleteHandler={onDeleteHandler} />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./app\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}